function [XR_AAAA_upup,XC_AAAA_upup,XR_AZZA_upup,XC_AZZA_upup , XR_AAAA_updn,XC_AAAA_updn,XR_AZZA_updn,XC_AZZA_updn , XR_AAAA_dnup,XC_AAAA_dnup,XR_AZZA_dnup,XC_AZZA_dnup , XR_AAAA_dndn,XC_AAAA_dndn,XR_AZZA_dndn,XC_AZZA_dndn] = tutorial_lakcluster_update_1(ver_flag,tmp_rij_keep,tmp_rij_drop,tmp_cij_keep,tmp_cij_drop,cov_A_up,cov_A_dn,cov_Z_up,cov_Z_dn,A,Z,XR_AAAA_upup,XC_AAAA_upup,XR_AZZA_upup,XC_AZZA_upup , XR_AAAA_updn,XC_AAAA_updn,XR_AZZA_updn,XC_AZZA_updn , XR_AAAA_dnup,XC_AAAA_dnup,XR_AZZA_dnup,XC_AZZA_dnup , XR_AAAA_dndn,XC_AAAA_dndn,XR_AZZA_dndn,XC_AZZA_dndn);
% updates row and column scores ;
% test with: ;
%{

  % make sure error==0;
  clear all;
  MA = 81;  NA = 140;
  MZ = 79;  NZ = NA;
  A = randn(MA,NA);  Z = randn(MZ,NZ);
  T = randn(MA,1)>0; S = randn(MZ,1)>0;
  cov_A_up = find(T==1); cov_A_dn = find(T==0);
  cov_Z_up = find(S==1); cov_Z_dn = find(S==0);
  tmp_rij_drop = [cov_A_up([5 2 7])',cov_A_dn([1 3])']; tmp_rij_keep = setdiff(1:MA,tmp_rij_drop);
  tmp_cij_drop = [9 17 11 23]; tmp_cij_keep = setdiff(1:NA,tmp_cij_drop);
  X__AnAt_upup = A(cov_A_up,:)*transpose(A(cov_A_up,:));
  X__AnZt_upup = A(cov_A_up,:)*transpose(Z(cov_Z_up,:));
  X__ZnZt_upup = Z(cov_Z_up,:)*transpose(Z(cov_Z_up,:));
  XR_AAAA_upup = diag( X__AnAt_upup * transpose(X__AnAt_upup) );
  XC_AAAA_upup = diag(transpose(A(cov_A_up,:)) * X__AnAt_upup * A(cov_A_up,:) );
  XR_AZZA_upup = diag( X__AnZt_upup * transpose(X__AnZt_upup) );
  XC_AZZA_upup = diag(transpose(A(cov_A_up,:)) * X__AnZt_upup * Z(cov_Z_up,:) );
  clear X__AnAt_upup X__AnZt_upup X__ZnZt_upup ;
  X__AnAt_updn = A(cov_A_up,:)*transpose(A(cov_A_dn,:));
  X__AnZt_updn = A(cov_A_up,:)*transpose(Z(cov_Z_dn,:));
  X__ZnZt_updn = Z(cov_Z_up,:)*transpose(Z(cov_Z_dn,:));
  XR_AAAA_updn = diag( X__AnAt_updn * transpose(X__AnAt_updn) );
  XC_AAAA_updn = diag(transpose(A(cov_A_up,:)) * X__AnAt_updn * A(cov_A_dn,:) );
  XR_AZZA_updn = diag( X__AnZt_updn * transpose(X__AnZt_updn) );
  XC_AZZA_updn = diag(transpose(A(cov_A_up,:)) * X__AnZt_updn * Z(cov_Z_dn,:) );
  clear X__AnAt_updn X__AnZt_updn X__ZnZt_updn ;
  X__AnAt_dnup = A(cov_A_dn,:)*transpose(A(cov_A_up,:));
  X__AnZt_dnup = A(cov_A_dn,:)*transpose(Z(cov_Z_up,:));
  X__ZnZt_dnup = Z(cov_Z_dn,:)*transpose(Z(cov_Z_up,:));
  XR_AAAA_dnup = diag( X__AnAt_dnup * transpose(X__AnAt_dnup) );
  XC_AAAA_dnup = diag(transpose(A(cov_A_dn,:)) * X__AnAt_dnup * A(cov_A_up,:) );
  XR_AZZA_dnup = diag( X__AnZt_dnup * transpose(X__AnZt_dnup) );
  XC_AZZA_dnup = diag(transpose(A(cov_A_dn,:)) * X__AnZt_dnup * Z(cov_Z_up,:) );
  clear X__AnAt_dnup X__AnZt_dnup X__ZnZt_dnup ;
  X__AnAt_dndn = A(cov_A_dn,:)*transpose(A(cov_A_dn,:));
  X__AnZt_dndn = A(cov_A_dn,:)*transpose(Z(cov_Z_dn,:));
  X__ZnZt_dndn = Z(cov_Z_dn,:)*transpose(Z(cov_Z_dn,:));
  XR_AAAA_dndn = diag( X__AnAt_dndn * transpose(X__AnAt_dndn) );
  XC_AAAA_dndn = diag(transpose(A(cov_A_dn,:)) * X__AnAt_dndn * A(cov_A_dn,:) );
  XR_AZZA_dndn = diag( X__AnZt_dndn * transpose(X__AnZt_dndn) );
  XC_AZZA_dndn = diag(transpose(A(cov_A_dn,:)) * X__AnZt_dndn * Z(cov_Z_dn,:) );
  clear X__AnAt_dndn X__AnZt_dndn X__ZnZt_dndn ;
  ver_flag=1;
  if ver_flag==1;
  [XR_AAAA_upup,XC_AAAA_upup,XR_AZZA_upup,XC_AZZA_upup , XR_AAAA_updn,XC_AAAA_updn,XR_AZZA_updn,XC_AZZA_updn , XR_AAAA_dnup,XC_AAAA_dnup,XR_AZZA_dnup,XC_AZZA_dnup , XR_AAAA_dndn,XC_AAAA_dndn,XR_AZZA_dndn,XC_AZZA_dndn] = tutorial_lakcluster_update_1(ver_flag,tmp_rij_keep,tmp_rij_drop,tmp_cij_keep,tmp_cij_drop,cov_A_up,cov_A_dn,cov_Z_up,cov_Z_dn,A,Z,XR_AAAA_upup,XC_AAAA_upup,XR_AZZA_upup,XC_AZZA_upup , XR_AAAA_updn,XC_AAAA_updn,XR_AZZA_updn,XC_AZZA_updn , XR_AAAA_dnup,XC_AAAA_dnup,XR_AZZA_dnup,XC_AZZA_dnup , XR_AAAA_dndn,XC_AAAA_dndn,XR_AZZA_dndn,XC_AZZA_dndn);
  end;% ver_flag;
  A = A(tmp_rij_keep,tmp_cij_keep); Z = Z(:,tmp_cij_keep);
  T = T(tmp_rij_keep,:); S = S(:,:);
  cov_A_up = find(T==1); cov_A_dn = find(T==0);
  cov_Z_up = find(S==1); cov_Z_dn = find(S==0);
  Y__AnAt_upup = A(cov_A_up,:)*transpose(A(cov_A_up,:));
  Y__AnZt_upup = A(cov_A_up,:)*transpose(Z(cov_Z_up,:));
  Y__ZnZt_upup = Z(cov_Z_up,:)*transpose(Z(cov_Z_up,:));
  YR_AAAA_upup = diag( Y__AnAt_upup * transpose(Y__AnAt_upup) );
  YC_AAAA_upup = diag(transpose(A(cov_A_up,:)) * Y__AnAt_upup * A(cov_A_up,:) );
  YR_AZZA_upup = diag( Y__AnZt_upup * transpose(Y__AnZt_upup) );
  YC_AZZA_upup = diag(transpose(A(cov_A_up,:)) * Y__AnZt_upup * Z(cov_Z_up,:) );
  clear Y__AnAt_upup Y__AnZt_upup Y__ZnZt_upup ;
  Y__AnAt_updn = A(cov_A_up,:)*transpose(A(cov_A_dn,:));
  Y__AnZt_updn = A(cov_A_up,:)*transpose(Z(cov_Z_dn,:));
  Y__ZnZt_updn = Z(cov_Z_up,:)*transpose(Z(cov_Z_dn,:));
  YR_AAAA_updn = diag( Y__AnAt_updn * transpose(Y__AnAt_updn) );
  YC_AAAA_updn = diag(transpose(A(cov_A_up,:)) * Y__AnAt_updn * A(cov_A_dn,:) );
  YR_AZZA_updn = diag( Y__AnZt_updn * transpose(Y__AnZt_updn) );
  YC_AZZA_updn = diag(transpose(A(cov_A_up,:)) * Y__AnZt_updn * Z(cov_Z_dn,:) );
  clear Y__AnAt_updn Y__AnZt_updn Y__ZnZt_updn ;
  Y__AnAt_dnup = A(cov_A_dn,:)*transpose(A(cov_A_up,:));
  Y__AnZt_dnup = A(cov_A_dn,:)*transpose(Z(cov_Z_up,:));
  Y__ZnZt_dnup = Z(cov_Z_dn,:)*transpose(Z(cov_Z_up,:));
  YR_AAAA_dnup = diag( Y__AnAt_dnup * transpose(Y__AnAt_dnup) );
  YC_AAAA_dnup = diag(transpose(A(cov_A_dn,:)) * Y__AnAt_dnup * A(cov_A_up,:) );
  YR_AZZA_dnup = diag( Y__AnZt_dnup * transpose(Y__AnZt_dnup) );
  YC_AZZA_dnup = diag(transpose(A(cov_A_dn,:)) * Y__AnZt_dnup * Z(cov_Z_up,:) );
  clear Y__AnAt_dnup Y__AnZt_dnup Y__ZnZt_dnup ;
  Y__AnAt_dndn = A(cov_A_dn,:)*transpose(A(cov_A_dn,:));
  Y__AnZt_dndn = A(cov_A_dn,:)*transpose(Z(cov_Z_dn,:));
  Y__ZnZt_dndn = Z(cov_Z_dn,:)*transpose(Z(cov_Z_dn,:));
  YR_AAAA_dndn = diag( Y__AnAt_dndn * transpose(Y__AnAt_dndn) );
  YC_AAAA_dndn = diag(transpose(A(cov_A_dn,:)) * Y__AnAt_dndn * A(cov_A_dn,:) );
  YR_AZZA_dndn = diag( Y__AnZt_dndn * transpose(Y__AnZt_dndn) );
  YC_AZZA_dndn = diag(transpose(A(cov_A_dn,:)) * Y__AnZt_dndn * Z(cov_Z_dn,:) );
  clear Y__AnAt_dndn Y__AnZt_dndn Y__ZnZt_dndn ;
  if ver_flag==1;
  nR_AAAA = log(norm(XR_AAAA_upup - YR_AAAA_upup)); nC_AAAA = log(norm(XC_AAAA_upup - YC_AAAA_upup)); nR_AZZA = log(norm(XR_AZZA_upup - YR_AZZA_upup)); nC_AZZA = log(norm(XC_AZZA_upup - YC_AZZA_upup));
  disp(sprintf(' %% errors: upup: exp([%.2f,%.2f,%.2f,%.2f])',nR_AAAA,nC_AAAA,nR_AZZA,nC_AZZA));
  nR_AAAA = log(norm(XR_AAAA_updn - YR_AAAA_updn)); nC_AAAA = log(norm(XC_AAAA_updn - YC_AAAA_updn)); nR_AZZA = log(norm(XR_AZZA_updn - YR_AZZA_updn)); nC_AZZA = log(norm(XC_AZZA_updn - YC_AZZA_updn));
  disp(sprintf(' %% errors: updn: exp([%.2f,%.2f,%.2f,%.2f])',nR_AAAA,nC_AAAA,nR_AZZA,nC_AZZA));
  nR_AAAA = log(norm(XR_AAAA_dnup - YR_AAAA_dnup)); nC_AAAA = log(norm(XC_AAAA_dnup - YC_AAAA_dnup)); nR_AZZA = log(norm(XR_AZZA_dnup - YR_AZZA_dnup)); nC_AZZA = log(norm(XC_AZZA_dnup - YC_AZZA_dnup));
  disp(sprintf(' %% errors: dnup: exp([%.2f,%.2f,%.2f,%.2f])',nR_AAAA,nC_AAAA,nR_AZZA,nC_AZZA));
  nR_AAAA = log(norm(XR_AAAA_dndn - YR_AAAA_dndn)); nC_AAAA = log(norm(XC_AAAA_dndn - YC_AAAA_dndn)); nR_AZZA = log(norm(XR_AZZA_dndn - YR_AZZA_dndn)); nC_AZZA = log(norm(XC_AZZA_dndn - YC_AZZA_dndn));
  disp(sprintf(' %% errors: dndn: exp([%.2f,%.2f,%.2f,%.2f])',nR_AAAA,nC_AAAA,nR_AZZA,nC_AZZA));
  end;% ver_flag;

  % test timing ;
  clear all;
  disp(sprintf(' %% initializing... '));
  MA = 150;  NA = 4000;
  MZ = 151;  NZ = NA;
  A = randn(MA,NA);  Z = randn(MZ,NZ);
  T = randn(MA,1)>0; S = randn(MZ,1)>0;
  cov_A_up = find(T==1); cov_A_dn = find(T==0);
  cov_Z_up = find(S==1); cov_Z_dn = find(S==0);
  tmp_rij_drop = [cov_A_up([5 2 7])',cov_A_dn([1 3])']; tmp_rij_keep = setdiff(1:MA,tmp_rij_drop);
  tmp_cij_drop = [9 17 11 23]; tmp_cij_keep = setdiff(1:NA,tmp_cij_drop);
  tic
  X__AnAt_upup = A(cov_A_up,:)*transpose(A(cov_A_up,:));
  X__AnZt_upup = A(cov_A_up,:)*transpose(Z(cov_Z_up,:));
  X__ZnZt_upup = Z(cov_Z_up,:)*transpose(Z(cov_Z_up,:));
  XR_AAAA_upup = diag( X__AnAt_upup * transpose(X__AnAt_upup) );
  XC_AAAA_upup = diag(transpose(A(cov_A_up,:)) * X__AnAt_upup * A(cov_A_up,:) );
  XR_AZZA_upup = diag( X__AnZt_upup * transpose(X__AnZt_upup) );
  XC_AZZA_upup = diag(transpose(A(cov_A_up,:)) * X__AnZt_upup * Z(cov_Z_up,:) );
  clear X__AnAt_upup X__AnZt_upup X__ZnZt_upup ;
  X__AnAt_updn = A(cov_A_up,:)*transpose(A(cov_A_dn,:));
  X__AnZt_updn = A(cov_A_up,:)*transpose(Z(cov_Z_dn,:));
  X__ZnZt_updn = Z(cov_Z_up,:)*transpose(Z(cov_Z_dn,:));
  XR_AAAA_updn = diag( X__AnAt_updn * transpose(X__AnAt_updn) );
  XC_AAAA_updn = diag(transpose(A(cov_A_up,:)) * X__AnAt_updn * A(cov_A_dn,:) );
  XR_AZZA_updn = diag( X__AnZt_updn * transpose(X__AnZt_updn) );
  XC_AZZA_updn = diag(transpose(A(cov_A_up,:)) * X__AnZt_updn * Z(cov_Z_dn,:) );
  clear X__AnAt_updn X__AnZt_updn X__ZnZt_updn ;
  X__AnAt_dnup = A(cov_A_dn,:)*transpose(A(cov_A_up,:));
  X__AnZt_dnup = A(cov_A_dn,:)*transpose(Z(cov_Z_up,:));
  X__ZnZt_dnup = Z(cov_Z_dn,:)*transpose(Z(cov_Z_up,:));
  XR_AAAA_dnup = diag( X__AnAt_dnup * transpose(X__AnAt_dnup) );
  XC_AAAA_dnup = diag(transpose(A(cov_A_dn,:)) * X__AnAt_dnup * A(cov_A_up,:) );
  XR_AZZA_dnup = diag( X__AnZt_dnup * transpose(X__AnZt_dnup) );
  XC_AZZA_dnup = diag(transpose(A(cov_A_dn,:)) * X__AnZt_dnup * Z(cov_Z_up,:) );
  clear X__AnAt_dnup X__AnZt_dnup X__ZnZt_dnup ;
  X__AnAt_dndn = A(cov_A_dn,:)*transpose(A(cov_A_dn,:));
  X__AnZt_dndn = A(cov_A_dn,:)*transpose(Z(cov_Z_dn,:));
  X__ZnZt_dndn = Z(cov_Z_dn,:)*transpose(Z(cov_Z_dn,:));
  XR_AAAA_dndn = diag( X__AnAt_dndn * transpose(X__AnAt_dndn) );
  XC_AAAA_dndn = diag(transpose(A(cov_A_dn,:)) * X__AnAt_dndn * A(cov_A_dn,:) );
  XR_AZZA_dndn = diag( X__AnZt_dndn * transpose(X__AnZt_dndn) );
  XC_AZZA_dndn = diag(transpose(A(cov_A_dn,:)) * X__AnZt_dndn * Z(cov_Z_dn,:) );
  clear X__AnAt_dndn X__AnZt_dndn X__ZnZt_dndn ;
  tini = toc;
  disp(sprintf(' %% init time %f',tini));
  ver_flag=1;
  tic;
  max_iteration=1;
  for iteration=1:max_iteration;
  tutorial_lakcluster_update_1(ver_flag,tmp_rij_keep,tmp_rij_drop,tmp_cij_keep,tmp_cij_drop,cov_A_up,cov_A_dn,cov_Z_up,cov_Z_dn,A,Z,XR_AAAA_upup,XC_AAAA_upup,XR_AZZA_upup,XC_AZZA_upup , XR_AAAA_updn,XC_AAAA_updn,XR_AZZA_updn,XC_AZZA_updn , XR_AAAA_dnup,XC_AAAA_dnup,XR_AZZA_dnup,XC_AZZA_dnup , XR_AAAA_dndn,XC_AAAA_dndn,XR_AZZA_dndn,XC_AZZA_dndn);
  end;% for iteration=1:max_iteration;
  tsum = toc;
  disp(sprintf(' %% tsum %f , tper %f ',tsum,tsum/max_iteration));  

%}

[tmp_rij_keep_up,tmp_rij_keep_up_y,tmp_rij_keep_up_x] = intersect(tmp_rij_keep,cov_A_up,'stable'); 
[tmp_rij_drop_up,tmp_rij_drop_up_y,tmp_rij_drop_up_x] = intersect(tmp_rij_drop,cov_A_up,'stable');
[tmp_rij_keep_dn,tmp_rij_keep_dn_y,tmp_rij_keep_dn_x] = intersect(tmp_rij_keep,cov_A_dn,'stable'); 
[tmp_rij_drop_dn,tmp_rij_drop_dn_y,tmp_rij_drop_dn_x] = intersect(tmp_rij_drop,cov_A_dn,'stable');

tmp_An_up = A(tmp_rij_keep_up,tmp_cij_keep);
tmp_Cn_up = A(tmp_rij_keep_up,tmp_cij_drop);
tmp_Bt_up = A(tmp_rij_drop_up,tmp_cij_keep);
tmp_Dn_up = A(tmp_rij_drop_up,tmp_cij_drop);
tmp_Zn_up = Z(cov_Z_up,tmp_cij_keep);
tmp_En_up = Z(cov_Z_up,tmp_cij_drop);
tmp_An_dn = A(tmp_rij_keep_dn,tmp_cij_keep);
tmp_Cn_dn = A(tmp_rij_keep_dn,tmp_cij_drop);
tmp_Bt_dn = A(tmp_rij_drop_dn,tmp_cij_keep);
tmp_Dn_dn = A(tmp_rij_drop_dn,tmp_cij_drop);
tmp_Zn_dn = Z(cov_Z_dn,tmp_cij_keep);
tmp_En_dn = Z(cov_Z_dn,tmp_cij_drop);

if ver_flag==1;
tmp_Ct_up_Cn_up = transpose(tmp_Cn_up)*tmp_Cn_up;
tmp_An_up_Bn_up = tmp_An_up*transpose(tmp_Bt_up);
tmp_Cn_up_Dt_up = tmp_Cn_up*transpose(tmp_Dn_up);
tmp_A_up_B_up_C_up_D_up = tmp_An_up_Bn_up + tmp_Cn_up_Dt_up;
tmp_Bt_up_Bn_up = tmp_Bt_up*transpose(tmp_Bt_up);
tmp_At_up_Cn_up = transpose(tmp_An_up)*tmp_Cn_up;
tmp_Bn_up_Dn_up = transpose(tmp_Bt_up)*tmp_Dn_up;
tmp_A_up_C_up_B_up_D_up = tmp_At_up_Cn_up + tmp_Bn_up_Dn_up;
tmp_Cn_up_Et_up = tmp_Cn_up*transpose(tmp_En_up);
tmp_Zt_up_En_up = transpose(tmp_Zn_up)*tmp_En_up;
tmp_Et_up_En_up = transpose(tmp_En_up)*tmp_En_up;
tmp_Zn_up_Bn_up = tmp_Zn_up*transpose(tmp_Bt_up);
%tmp_Ct_up_Cn_dn = transpose(tmp_Cn_up)*tmp_Cn_dn;
tmp_An_up_Bn_dn = tmp_An_up*transpose(tmp_Bt_dn);
tmp_Cn_up_Dt_dn = tmp_Cn_up*transpose(tmp_Dn_dn);
tmp_A_up_B_dn_C_up_D_dn = tmp_An_up_Bn_dn + tmp_Cn_up_Dt_dn;
tmp_Bt_up_Bn_dn = tmp_Bt_up*transpose(tmp_Bt_dn);
%tmp_At_up_Cn_dn = transpose(tmp_An_up)*tmp_Cn_dn;
%tmp_Bn_up_Dn_dn = transpose(tmp_Bt_up)*tmp_Dn_dn;
%tmp_A_up_C_dn_B_up_D_dn = tmp_At_up_Cn_dn + tmp_Bn_up_Dn_dn;
tmp_Cn_up_Et_dn = tmp_Cn_up*transpose(tmp_En_dn);
%tmp_Zt_up_En_dn = transpose(tmp_Zn_up)*tmp_En_dn;
%tmp_Et_up_En_dn = transpose(tmp_En_up)*tmp_En_dn;
tmp_Zn_up_Bn_dn = tmp_Zn_up*transpose(tmp_Bt_dn);
%tmp_Ct_dn_Cn_up = transpose(tmp_Cn_dn)*tmp_Cn_up;
tmp_An_dn_Bn_up = tmp_An_dn*transpose(tmp_Bt_up);
tmp_Cn_dn_Dt_up = tmp_Cn_dn*transpose(tmp_Dn_up);
tmp_A_dn_B_up_C_dn_D_up = tmp_An_dn_Bn_up + tmp_Cn_dn_Dt_up;
tmp_Bt_dn_Bn_up = tmp_Bt_dn*transpose(tmp_Bt_up);
%tmp_At_dn_Cn_up = transpose(tmp_An_dn)*tmp_Cn_up;
%tmp_Bn_dn_Dn_up = transpose(tmp_Bt_dn)*tmp_Dn_up;
%tmp_A_dn_C_up_B_dn_D_up = tmp_At_dn_Cn_up + tmp_Bn_dn_Dn_up;
tmp_Cn_dn_Et_up = tmp_Cn_dn*transpose(tmp_En_up);
%tmp_Zt_dn_En_up = transpose(tmp_Zn_dn)*tmp_En_up;
%tmp_Et_dn_En_up = transpose(tmp_En_dn)*tmp_En_up;
tmp_Zn_dn_Bn_up = tmp_Zn_dn*transpose(tmp_Bt_up);
tmp_Ct_dn_Cn_dn = transpose(tmp_Cn_dn)*tmp_Cn_dn;
tmp_An_dn_Bn_dn = tmp_An_dn*transpose(tmp_Bt_dn);
tmp_Cn_dn_Dt_dn = tmp_Cn_dn*transpose(tmp_Dn_dn);
tmp_A_dn_B_dn_C_dn_D_dn = tmp_An_dn_Bn_dn + tmp_Cn_dn_Dt_dn;
tmp_Bt_dn_Bn_dn = tmp_Bt_dn*transpose(tmp_Bt_dn);
tmp_At_dn_Cn_dn = transpose(tmp_An_dn)*tmp_Cn_dn;
tmp_Bn_dn_Dn_dn = transpose(tmp_Bt_dn)*tmp_Dn_dn;
tmp_A_dn_C_dn_B_dn_D_dn = tmp_At_dn_Cn_dn + tmp_Bn_dn_Dn_dn;
tmp_Cn_dn_Et_dn = tmp_Cn_dn*transpose(tmp_En_dn);
tmp_Zt_dn_En_dn = transpose(tmp_Zn_dn)*tmp_En_dn;
tmp_Et_dn_En_dn = transpose(tmp_En_dn)*tmp_En_dn;
tmp_Zn_dn_Bn_dn = tmp_Zn_dn*transpose(tmp_Bt_dn);

XR_AAAA_upup__tmp = zeros(length(tmp_rij_keep_up),1);
XR_AZZA_upup__tmp = zeros(length(tmp_rij_keep_up),1);
XR_AAAA_updn__tmp = zeros(length(tmp_rij_keep_up),1);
XR_AZZA_updn__tmp = zeros(length(tmp_rij_keep_up),1);
for nl=1:length(tmp_rij_keep_up);
tmp_an_up = tmp_An_up(nl,:); tmp_at_up = transpose(tmp_an_up); tmp_cn_up = tmp_Cn_up(nl,:); tmp_ct_up = transpose(tmp_cn_up); 
XR_AAAA_upup__tmp(nl) = tmp_an_up*tmp_At_up_Cn_up*tmp_ct_up + tmp_cn_up*transpose(tmp_At_up_Cn_up)*tmp_at_up + tmp_cn_up*tmp_Ct_up_Cn_up*tmp_ct_up + tmp_A_up_B_up_C_up_D_up(nl,:)*transpose(tmp_A_up_B_up_C_up_D_up(nl,:));
XR_AZZA_upup__tmp(nl) = tmp_an_up*tmp_Zt_up_En_up*tmp_ct_up + tmp_cn_up*transpose(tmp_Zt_up_En_up)*tmp_at_up + tmp_cn_up*tmp_Et_up_En_up*tmp_ct_up;
XR_AAAA_updn__tmp(nl) = tmp_an_up*tmp_At_dn_Cn_dn*tmp_ct_up + tmp_cn_up*transpose(tmp_At_dn_Cn_dn)*tmp_at_up + tmp_cn_up*tmp_Ct_dn_Cn_dn*tmp_ct_up + tmp_A_up_B_dn_C_up_D_dn(nl,:)*transpose(tmp_A_up_B_dn_C_up_D_dn(nl,:));
XR_AZZA_updn__tmp(nl) = tmp_an_up*tmp_Zt_dn_En_dn*tmp_ct_up + tmp_cn_up*transpose(tmp_Zt_dn_En_dn)*tmp_at_up + tmp_cn_up*tmp_Et_dn_En_dn*tmp_ct_up;
end;%for nl=1:length(tmp_rij_keep_up);
XR_AAAA_upup = XR_AAAA_upup(tmp_rij_keep_up_x) - XR_AAAA_upup__tmp;
XR_AZZA_upup = XR_AZZA_upup(tmp_rij_keep_up_x) - XR_AZZA_upup__tmp;
XR_AAAA_updn = XR_AAAA_updn(tmp_rij_keep_up_x) - XR_AAAA_updn__tmp;
XR_AZZA_updn = XR_AZZA_updn(tmp_rij_keep_up_x) - XR_AZZA_updn__tmp;

XR_AAAA_dndn__tmp = zeros(length(tmp_rij_keep_dn),1);
XR_AZZA_dndn__tmp = zeros(length(tmp_rij_keep_dn),1);
XR_AAAA_dnup__tmp = zeros(length(tmp_rij_keep_dn),1);
XR_AZZA_dnup__tmp = zeros(length(tmp_rij_keep_dn),1);
for nl=1:length(tmp_rij_keep_dn);
tmp_an_dn = tmp_An_dn(nl,:); tmp_at_dn = transpose(tmp_an_dn); tmp_cn_dn = tmp_Cn_dn(nl,:); tmp_ct_dn = transpose(tmp_cn_dn); 
XR_AAAA_dndn__tmp(nl) = tmp_an_dn*tmp_At_dn_Cn_dn*tmp_ct_dn + tmp_cn_dn*transpose(tmp_At_dn_Cn_dn)*tmp_at_dn + tmp_cn_dn*tmp_Ct_dn_Cn_dn*tmp_ct_dn + tmp_A_dn_B_dn_C_dn_D_dn(nl,:)*transpose(tmp_A_dn_B_dn_C_dn_D_dn(nl,:));
XR_AZZA_dndn__tmp(nl) = tmp_an_dn*tmp_Zt_dn_En_dn*tmp_ct_dn + tmp_cn_dn*transpose(tmp_Zt_dn_En_dn)*tmp_at_dn + tmp_cn_dn*tmp_Et_dn_En_dn*tmp_ct_dn;
XR_AAAA_dnup__tmp(nl) = tmp_an_dn*tmp_At_up_Cn_up*tmp_ct_dn + tmp_cn_dn*transpose(tmp_At_up_Cn_up)*tmp_at_dn + tmp_cn_dn*tmp_Ct_up_Cn_up*tmp_ct_dn + tmp_A_dn_B_up_C_dn_D_up(nl,:)*transpose(tmp_A_dn_B_up_C_dn_D_up(nl,:));
XR_AZZA_dnup__tmp(nl) = tmp_an_dn*tmp_Zt_up_En_up*tmp_ct_dn + tmp_cn_dn*transpose(tmp_Zt_up_En_up)*tmp_at_dn + tmp_cn_dn*tmp_Et_up_En_up*tmp_ct_dn;
end;%for nl=1:length(tmp_rij_keep_dn);
XR_AAAA_dndn = XR_AAAA_dndn(tmp_rij_keep_dn_x) - XR_AAAA_dndn__tmp;
XR_AZZA_dndn = XR_AZZA_dndn(tmp_rij_keep_dn_x) - XR_AZZA_dndn__tmp;
XR_AAAA_dnup = XR_AAAA_dnup(tmp_rij_keep_dn_x) - XR_AAAA_dnup__tmp;
XR_AZZA_dnup = XR_AZZA_dnup(tmp_rij_keep_dn_x) - XR_AZZA_dnup__tmp;

XC_AAAA_upup__tmp = zeros(length(tmp_cij_keep),1);
XC_AZZA_upup__tmp = zeros(length(tmp_cij_keep),1);
XC_AAAA_updn__tmp = zeros(length(tmp_cij_keep),1);
XC_AZZA_updn__tmp = zeros(length(tmp_cij_keep),1);
XC_AAAA_dnup__tmp = zeros(length(tmp_cij_keep),1);
XC_AZZA_dnup__tmp = zeros(length(tmp_cij_keep),1);
XC_AAAA_dndn__tmp = zeros(length(tmp_cij_keep),1);
XC_AZZA_dndn__tmp = zeros(length(tmp_cij_keep),1);
for nl=1:length(tmp_cij_keep);
tmp_an_up = tmp_An_up(:,nl); tmp_at_up = transpose(tmp_an_up); tmp_bt_up = tmp_Bt_up(:,nl); tmp_bn_up = transpose(tmp_bt_up); tmp_zn_up = tmp_Zn_up(:,nl); tmp_zt_up = transpose(tmp_zn_up);
tmp_an_dn = tmp_An_dn(:,nl); tmp_at_dn = transpose(tmp_an_dn); tmp_bt_dn = tmp_Bt_dn(:,nl); tmp_bn_dn = transpose(tmp_bt_dn); tmp_zn_dn = tmp_Zn_dn(:,nl); tmp_zt_dn = transpose(tmp_zn_dn);
XC_AAAA_upup__tmp(nl) = tmp_at_up*tmp_An_up_Bn_up*tmp_bt_up + tmp_bn_up*transpose(tmp_An_up_Bn_up)*tmp_an_up + tmp_bn_up*tmp_Bt_up_Bn_up*tmp_bt_up + tmp_A_up_C_up_B_up_D_up(nl,:)*transpose(tmp_A_up_C_up_B_up_D_up(nl,:));
XC_AZZA_upup__tmp(nl) = tmp_bn_up*transpose(tmp_Zn_up_Bn_up)*tmp_zn_up + tmp_A_up_C_up_B_up_D_up(nl,:)*transpose(tmp_Zt_up_En_up(nl,:));
XC_AAAA_updn__tmp(nl) = tmp_at_up*tmp_An_up_Bn_dn*tmp_bt_dn + tmp_bn_up*transpose(tmp_An_dn_Bn_up)*tmp_an_dn + tmp_bn_up*tmp_Bt_up_Bn_dn*tmp_bt_dn + tmp_A_up_C_up_B_up_D_up(nl,:)*transpose(tmp_A_dn_C_dn_B_dn_D_dn(nl,:));
XC_AZZA_updn__tmp(nl) = tmp_bn_up*transpose(tmp_Zn_dn_Bn_up)*tmp_zn_dn + tmp_A_up_C_up_B_up_D_up(nl,:)*transpose(tmp_Zt_dn_En_dn(nl,:));
XC_AAAA_dnup__tmp(nl) = tmp_at_dn*tmp_An_dn_Bn_up*tmp_bt_up + tmp_bn_dn*transpose(tmp_An_up_Bn_dn)*tmp_an_up + tmp_bn_dn*tmp_Bt_dn_Bn_up*tmp_bt_up + tmp_A_dn_C_dn_B_dn_D_dn(nl,:)*transpose(tmp_A_up_C_up_B_up_D_up(nl,:));
XC_AZZA_dnup__tmp(nl) = tmp_bn_dn*transpose(tmp_Zn_up_Bn_dn)*tmp_zn_up + tmp_A_dn_C_dn_B_dn_D_dn(nl,:)*transpose(tmp_Zt_up_En_up(nl,:));
XC_AAAA_dndn__tmp(nl) = tmp_at_dn*tmp_An_dn_Bn_dn*tmp_bt_dn + tmp_bn_dn*transpose(tmp_An_dn_Bn_dn)*tmp_an_dn + tmp_bn_dn*tmp_Bt_dn_Bn_dn*tmp_bt_dn + tmp_A_dn_C_dn_B_dn_D_dn(nl,:)*transpose(tmp_A_dn_C_dn_B_dn_D_dn(nl,:));
XC_AZZA_dndn__tmp(nl) = tmp_bn_dn*transpose(tmp_Zn_dn_Bn_dn)*tmp_zn_dn + tmp_A_dn_C_dn_B_dn_D_dn(nl,:)*transpose(tmp_Zt_dn_En_dn(nl,:));
end;%for nl=1:length(tmp_cij_keep);
XC_AAAA_upup = XC_AAAA_upup(tmp_cij_keep) - XC_AAAA_upup__tmp;
XC_AZZA_upup = XC_AZZA_upup(tmp_cij_keep) - XC_AZZA_upup__tmp;
XC_AAAA_updn = XC_AAAA_updn(tmp_cij_keep) - XC_AAAA_updn__tmp;
XC_AZZA_updn = XC_AZZA_updn(tmp_cij_keep) - XC_AZZA_updn__tmp;
XC_AAAA_dnup = XC_AAAA_dnup(tmp_cij_keep) - XC_AAAA_dnup__tmp;
XC_AZZA_dnup = XC_AZZA_dnup(tmp_cij_keep) - XC_AZZA_dnup__tmp;
XC_AAAA_dndn = XC_AAAA_dndn(tmp_cij_keep) - XC_AAAA_dndn__tmp;
XC_AZZA_dndn = XC_AZZA_dndn(tmp_cij_keep) - XC_AZZA_dndn__tmp;
 else; disp(sprintf(' %% Warning! wrong version %d within tutorial_lakcluster_update_1.m',ver_flag)); return;
end;%if ver_flag==1;

% reverse sorting: 
%[tmp_rij_keep_up,tmp_rij_keep_up_x,tmp_rij_keep_up_y] = intersect(cov_A_up,tmp_rij_keep,'stable'); 
%[tmp_rij_drop_up,tmp_rij_drop_up_x,tmp_rij_drop_up_y] = intersect(cov_A_up,tmp_rij_drop,'stable');
%[tmp_rij_keep_dn,tmp_rij_keep_dn_x,tmp_rij_keep_dn_y] = intersect(cov_A_dn,tmp_rij_keep,'stable'); 
%[tmp_rij_drop_dn,tmp_rij_drop_dn_x,tmp_rij_drop_dn_y] = intersect(cov_A_dn,tmp_rij_drop,'stable');
% example: ;
% T_old             = [ 1 1 0 1 0 1 0 1 ] ;
% cov_A_up          = [ 1 2   4   6   8 ] ;
% cov_A_dn          = [     3   5   7   ] ;
% tmp_rij_keep      = [8 7 6 5 4 2] ;
% tmp_rij_drop      = [3 1] ;
% tmp_rij_keep_up   = [2 4 6 8] ;
% tmp_rij_keep_up_x = [2 3 4 5] ;
% tmp_rij_keep_up_y = [6 5 3 1] ;
% tmp_rij_drop_up   = [1] ;
% tmp_rij_drop_up_x = [1] ;
% tmp_rij_drop_up_y = [2] ;
% tmp_rij_keep_dn   = [5 7] ;
% tmp_rij_keep_dn_x = [2 3] ;
% tmp_rij_keep_dn_y = [4 2] ;
% tmp_rij_drop_dn   = [3] ;
% tmp_rij_drop_dn_x = [1] ;
% tmp_rij_drop_dn_y = [1] ;
% T_new             = [ 1 0 1 0 1 1 ] ;
% cov_A_up_new      = [ 1   3   5 6 ] ;
% points to         : [ 8   6   4 2 ] ;
% cov_A_dn_new      = [   2   4     ] ;
% points to         : [   7   5     ] ;
% will need to reorder ;
