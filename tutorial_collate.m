function [tr_base,tr_ra_,tc_base,tc_ra_,cij_base] = tutorial_collate(path_base,gen_fname,frwd_vs_back);
% Designed to collect and plot results generated by using tutorial_w1.m (including multiple biclusters) : ;
% Loads trace and xdrop for each bicluster, as well as all the traces for the shuffled runs. ;
% clear; tutorial_collate('/scratch/avr209/dir_bcc/dir_tutorial_081915/dir_GSE17536/','GSE17536_nA_','frwd');
% clear; path_base = '/data/rangan/dir_bcc/dir_tutorial_081915/dir_GSE17536/'; gen_fname = 'GSE17536_n0x'; frwd_vs_back = 'frwd';

bitj=16; 
%path_base = './';
prefix_base = sprintf('%s',gen_fname); prefix = prefix_base; 
path_pre_prm = sprintf('%sdir_%s_prm/',path_base,prefix_base);
path_FIGS = sprintf('%sdir_FIGS/',path_base); if ~exist(path_FIGS,'dir'); mkdir(path_base,'dir_FIGS'); end;
tutorial_w1_setup;

Omax = 16;
ox_ra = zeros(Omax,1);
path_use = path_base;
prefix = prefix_base; 
for no=0:Omax-1; 
if no==0; tmp_bc_fname = sprintf('%s%s_%s_bc.txt',path_use,prefix,frwd_vs_back);
 else; tmp_bc_fname = sprintf('%s%s_%s_%d_bc.txt',path_use,prefix,frwd_vs_back,no); end;
if no==0; tmp_trace_fname = sprintf('%s%s_%s_out_trace.txt',path_use,prefix,frwd_vs_back);
 else; tmp_trace_fname = sprintf('%s%s_%s_%d_out_trace.txt',path_use,prefix,frwd_vs_back,no); end;
if no==0; tmp_xdrop_fname = sprintf('%s%s_%s_out_xdrop.txt',path_use,prefix,frwd_vs_back);
 else; tmp_xdrop_fname = sprintf('%s%s_%s_%d_out_xdrop.txt',path_use,prefix,frwd_vs_back,no); end;
if (exist(tmp_bc_fname,'file') & exist(tmp_xdrop_fname,'file') & exist(tmp_trace_fname,'file')); ox_ra(1+no)=1; end;
end;% for no=0:Omax-1; 
O_ra = find(ox_ra);
NO = length(O_ra);
if disp_flag; disp(sprintf(' %% found bc, xdrop and trace for %d biclusters',NO)); end;


clear tr_base_ra tc_base_ra nc_base_ra bc_size;
path_use = path_base;
prefix = prefix_base; 
for no=1:NO;
no_flag = O_ra(no)-1;
if no_flag==0; tmp_bc_fname = sprintf('%s%s_%s_bc.txt',path_use,prefix,frwd_vs_back);
 else; tmp_bc_fname = sprintf('%s%s_%s_%d_bc.txt',path_use,prefix,frwd_vs_back,no_flag); end;
if no_flag==0; tmp_trace_fname = sprintf('%s%s_%s_out_trace.txt',path_use,prefix,frwd_vs_back);
 else; tmp_trace_fname = sprintf('%s%s_%s_%d_out_trace.txt',path_use,prefix,frwd_vs_back,no_flag); end;
if no_flag==0; tmp_xdrop_fname = sprintf('%s%s_%s_out_xdrop.txt',path_use,prefix,frwd_vs_back);
 else; tmp_xdrop_fname = sprintf('%s%s_%s_%d_out_xdrop.txt',path_use,prefix,frwd_vs_back,no_flag); end;
if disp_flag; disp(sprintf(' %% bc%d: %s',no_flag,tmp_bc_fname)); end;
bc_tmp = textread(tmp_bc_fname);
bc_size(1,no) = length(find(bc_tmp(:,1)>-1));
bc_size(2,no) = length(find(bc_tmp(:,2)>-1));
if disp_flag; disp(sprintf(' %% bc%d: %s',no_flag,tmp_trace_fname)); end;
t_tmp = textread(tmp_trace_fname);
tr_base_ra(:,no) = t_tmp(:,4);
tc_base_ra(:,no) = t_tmp(:,5);
nc_base_ra(:,no) = t_tmp(:,6);
if disp_flag; disp(sprintf(' %% bc%d: %s',no_flag,tmp_xdrop_fname)); end;
out_xdrop = textread(tmp_xdrop_fname);
cdrop = out_xdrop(:,2); cij0 = cdrop(find(cdrop>=0)); cij0 = [cij0(:) ; setdiff(g_ij(:)-1,cij0(:))]; cij0 = cij0(end:-1:1);
[tmp,tmp,tmp_ij] = intersect(g_ij,1+cij0,'stable');
cij_base_ra(:,no) = tmp_ij;
end;%for no=1:NO;

path_use = path_pre_prm;
Pmax = 2048;
ex_ra_=zeros(Pmax,1);
prefix = prefix_base; 
prm_pre = 'prm';
for np=1:Pmax; 
prefix = sprintf('%s_%s%.3d',prefix_base,prm_pre,np);
if (exist(sprintf('%s%s_%s_out_trace.txt',path_use,prefix,frwd_vs_back),'file')); ex_ra_(np)=1; end; 
end;% for np=1:Pmax; 
disp(sprintf('found %d distinct permutations',length(find(ex_ra_))));
P_xxxx_ra_ = find(ex_ra_);
NP_xxxx_ = length(P_xxxx_ra_);
tr_ra_ = zeros(size(tr_base_ra,1),NP_xxxx_);
tc_ra_ = zeros(size(tc_base_ra,1),NP_xxxx_);
nc_ra_ = zeros(size(nc_base_ra,1),NP_xxxx_);
for (np=1:NP_xxxx_);
prm_flag = P_xxxx_ra_(np);
prefix = sprintf('%s_%s%.3d',prefix_base,prm_pre,prm_flag);
%disp(sprintf('%s%s_%s_out_trace.txt',path_use,prefix,frwd_vs_back));
t_tmp = textread(sprintf('%s%s_%s_out_trace.txt',path_use,prefix,frwd_vs_back));
tr_ra_(:,np) = t_tmp(:,4);
tc_ra_(:,np) = t_tmp(:,5);
nc_ra_(:,np) = t_tmp(:,6);
end;%for (np=1:NP_xxxx_);
tr_ra_(~isfinite(tr_ra_))=0;
tc_ra_(~isfinite(tc_ra_))=0;

% Here we plot the distribution of scores -- across iterations and permutations -- for each type of permutation ;
plot_flag=1;
if plot_flag;
figure;cla;
lnclr_ = 'r-'; 
subplot(2,1,1);cla;
hold on;
l=plot(1:size(tr_base_ra,1),prctile(transpose(tr_ra_), 5),lnclr_); set(l,'LineWidth',1);
l=plot(1:size(tr_base_ra,1),prctile(transpose(tr_ra_),50),lnclr_); set(l,'LineWidth',3);
l=plot(1:size(tr_base_ra,1),prctile(transpose(tr_ra_),95),lnclr_); set(l,'LineWidth',1);
xlim([0.00*size(tr_base_ra,1),size(tr_base_ra,1)]);
l=plot(1:size(tr_base_ra,1),tr_base_ra,'ko-'); set(l,'LineWidth',4);
title('average row score (biclusters black, shuffle-tests red)'); xlabel('iteration'); ylabel('score'); legend('95th %ile','median','5th %ile','Location','NorthWest');
hold off;
subplot(2,1,2);cla;
hold on;
l=plot(1:size(tc_base_ra,1),prctile(transpose(tc_ra_), 5),lnclr_); set(l,'LineWidth',1);
l=plot(1:size(tc_base_ra,1),prctile(transpose(tc_ra_),50),lnclr_); set(l,'LineWidth',3);
l=plot(1:size(tc_base_ra,1),prctile(transpose(tc_ra_),95),lnclr_); set(l,'LineWidth',1);
xlim([0.00*size(tc_base_ra,1),size(tc_base_ra,1)]);
l=plot(1:size(tc_base_ra,1),tc_base_ra,'ko-'); set(l,'LineWidth',4);
title('average col score (biclusters black, shuffle-tests red)'); xlabel('iteration'); ylabel('score'); legend('95th %ile','median','5th %ile','Location','NorthWest');
hold off;
set(gcf,'Position',[100, 100, 1049, 895]);
print('-depsc',sprintf('%s%s_%s_collate_FIGA.eps',path_FIGS,prefix_base,frwd_vs_back));
print('-djpeg',sprintf('%s%s_%s_collate_FIGA.jpg',path_FIGS,prefix_base,frwd_vs_back));
end;%if plot_flag;

% Here we look at the distribution (across permutations) of the z-score max (across iterations) row score, conditioned on retaining all covariates ;
tr_zmx_ = zeros(size(nc_ra_,2),1);
tc_zmx_ = zeros(size(nc_ra_,2),1);
tr_avg = mean(tr_ra_(:,:),2);
tr_std = std(tr_ra_(:,:),[],2);
tc_avg = mean(tc_ra_(:,:),2);
tc_std = std(tc_ra_(:,:),[],2);
for no=1:NO;
tmp_ij = find(nc_base_ra(:,no)==max(nc_base_ra(:,no))); tmp_ij = find(tmp_ij>size(nc_base_ra(:,no),1)/2);
tr_base_zmx_ra(no) = 0; if length(tmp_ij)>0; tr_base_zmx_ra(no) = max((tr_base_ra(tmp_ij,no) - tr_avg(tmp_ij))./tr_std(tmp_ij)); end;
tc_base_zmx_ra(no) = 0; if length(tmp_ij)>0; tc_base_zmx_ra(no) = max((tc_base_ra(tmp_ij,no) - tc_avg(tmp_ij))./tc_std(tmp_ij)); end;
end;%for no=1:NO;
for np=1:size(nc_ra_,2);
tmp_ij = find(nc_ra_(:,np)==max(nc_ra_(:,np))); tmp_ij = find(tmp_ij>size(nc_base_ra(:,no),1)/2);
tr_zmx_(np) = 0; if length(tmp_ij)>0; tr_zmx_(np) = max((tr_ra_(tmp_ij,np) - tr_avg(tmp_ij))./tr_std(tmp_ij)); end;
tc_zmx_(np) = 0; if length(tmp_ij)>0; tc_zmx_(np) = max((tc_ra_(tmp_ij,np) - tc_avg(tmp_ij))./tc_std(tmp_ij)); end;
end;%for np=1:size(nc_ra_,2);
for no=1:NO;
tr_zmx_pval_(no) = length(find(tr_zmx_>tr_base_zmx_ra(no)))/length(tr_zmx_);
tc_zmx_pval_(no) = length(find(tc_zmx_>tc_base_zmx_ra(no)))/length(tc_zmx_);
end;%for no=1:NO;

plot_flag=1;
if plot_flag;
zmx1 = 2;
zmx2 = 4;
hrzmx_ = hist(tr_zmx_,linspace(-zmx1,+zmx2,128));
hczmx_ = hist(tc_zmx_,linspace(-zmx1,+zmx2,128));
figure;cla;
subplot(2,1,1);
hold on;
hist(tr_zmx_,linspace(-zmx1,+zmx2,128));
for no=1:NO;
no_flag = O_ra(no)-1;
l = line([tr_base_zmx_ra(no),tr_base_zmx_ra(no)],[0,max(hrzmx_)]); set(l,'Color','r','LineWidth',2);
text(-zmx1,max(hrzmx_)*(1-(no+0)/(NO+1)),sprintf(' bc%d: %0.3f',no_flag,tr_zmx_pval_(no)));
end;%for no=1:NO;
xlim([-zmx1,+zmx2]); xlabel('avg-row-score: max-z-score'); ylabel('#'); title('histogram of label-shuffled max-z-score for avg-row-score: biclusters shown in red, pvalues listed on left. ');
hold off;
subplot(2,1,2);
hold on;
hist(tc_zmx_,linspace(-zmx1,+zmx2,128));
for no=1:NO;
no_flag = O_ra(no)-1;
l = line([tc_base_zmx_ra(no),tc_base_zmx_ra(no)],[0,max(hczmx_)]); set(l,'Color','r','LineWidth',2);
text(-zmx1,max(hczmx_)*(1-(no+0)/(NO+1)),sprintf(' bc%d: %0.3f',no_flag,tc_zmx_pval_(no)));
end;%for no=1:NO;
xlim([-zmx1,+zmx2]); xlabel('avg-col-score: max-z-score'); ylabel('#'); title('histogram of label-shuffled max-z-score for avg-col-score: biclusters shown in red, pvalues listed on left. ');
hold off;
set(gcf,'Position',[100, 100, 1049, 895]);
print('-depsc',sprintf('%s%s_%s_collate_FIGB.eps',path_FIGS,prefix_base,frwd_vs_back));
print('-djpeg',sprintf('%s%s_%s_collate_FIGB.jpg',path_FIGS,prefix_base,frwd_vs_back));
end;%if plot_flag;

% Here we look at the distribution (across permutations) of the max (across iterations) row score, conditioned on retaining all covariates ;
for no=1:NO;
tmp_ij = find(nc_base_ra(:,no)==max(nc_base_ra(:,no)));
tr_base_max_ra(no) = max(tr_base_ra(tmp_ij,no));
tc_base_max_ra(no) = max(tc_base_ra(tmp_ij,no));
end;%for no=1:NO;
tr_max_ = zeros(size(nc_ra_,2),1);
tc_max_ = zeros(size(nc_ra_,2),1);
for np=1:size(nc_ra_,2);
tmp_ij = find(nc_ra_(:,np)==max(nc_ra_(:,np)));
tr_max_(np) = max(tr_ra_(tmp_ij,np));
tc_max_(np) = max(tc_ra_(tmp_ij,np));
end;%for np=1:size(nc_ra_,2);
for no=1:NO;
tr_max_pval_(no) = length(find(tr_max_>tr_base_max_ra(no)))/length(tr_max_);
tc_max_pval_(no) = length(find(tc_max_>tc_base_max_ra(no)))/length(tc_max_);
end;%for no=1:NO;

plot_flag=1;
if plot_flag;
hrmax_ = hist(tr_max_,linspace(0,1,128));
hcmax_ = hist(tc_max_,linspace(0,1,128));
figure;cla;
subplot(2,1,1);
hold on;
hist(tr_max_,linspace(0,1,128));
for no=1:NO;
no_flag = O_ra(no)-1;
l = line([tr_base_max_ra(no),tr_base_max_ra(no)],[0,max(hrmax_)]); set(l,'Color','r','LineWidth',2);
text(0.0,max(hrmax_)*(1-(no+0)/(NO+1)),sprintf(' bc%d: %0.3f',no_flag,tr_max_pval_(no)));
end;%for no=1:NO;
xlim([0.0,1.0]); xlabel('avg-row-score: max-score'); ylabel('#'); title('histogram of label-shuffled max-score for avg-row-score: biclusters shown in red, pvalues listed on left. ');
hold off;
subplot(2,1,2);
hold on;
hist(tc_max_,linspace(0,1,128));
for no=1:NO;
no_flag = O_ra(no)-1;
l = line([tc_base_max_ra(no),tc_base_max_ra(no)],[0,max(hcmax_)]); set(l,'Color','r','LineWidth',2);
text(0.0,max(hcmax_)*(1-(no+0)/(NO+1)),sprintf(' bc%d: %0.3f',no_flag,tc_max_pval_(no)));
end;%for no=1:NO;
xlim([0.0,1.0]); xlabel('avg-col-score: max-score'); ylabel('#'); title('histogram of label-shuffled max-score for avg-col-score: biclusters shown in red, pvalues listed on left. ');
hold off;
set(gcf,'Position',[100, 100, 1049, 895]);
print('-depsc',sprintf('%s%s_%s_collate_FIGC.eps',path_FIGS,prefix_base,frwd_vs_back));
print('-djpeg',sprintf('%s%s_%s_collate_FIGC.jpg',path_FIGS,prefix_base,frwd_vs_back));
end;%if plot_flag;

% Here we look at the distribution (across permutations) of the avg (across iterations) row score, conditioned on retaining all covariates ;
for no=1:NO;
tmp_ij = find(nc_base_ra(:,no)==max(nc_base_ra(:,no)));
tr_base_avg_ra(no) = mean(tr_base_ra(tmp_ij,no));
tc_base_avg_ra(no) = mean(tc_base_ra(tmp_ij,no));
end;%for no=1:NO;
tr_avg_ = zeros(size(nc_ra_,2),1);
tc_avg_ = zeros(size(nc_ra_,2),1);
for np=1:size(nc_ra_,2);
tmp_ij = find(nc_ra_(:,np)==max(nc_ra_(:,np)));
tr_avg_(np) = mean(tr_ra_(tmp_ij,np));
tc_avg_(np) = mean(tc_ra_(tmp_ij,np));
end;%for np=1:size(nc_ra_,2);
for no=1:NO;
tr_avg_pval_(no) = length(find(tr_avg_>tr_base_avg_ra(no)))/length(tr_avg_);
tc_avg_pval_(no) = length(find(tc_avg_>tc_base_avg_ra(no)))/length(tc_avg_);
end;%for no=1:NO;

plot_flag=1;
if plot_flag;
hravg_ = hist(tr_avg_,linspace(0,1,128));
hcavg_ = hist(tc_avg_,linspace(0,1,128));
figure;cla;
subplot(2,1,1);
hold on;
hist(tr_avg_,linspace(0,1,128));
for no=1:NO;
no_flag = O_ra(no)-1;
l = line([tr_base_avg_ra(no),tr_base_avg_ra(no)],[0,max(hravg_)]); set(l,'Color','r','LineWidth',2);
text(-0.5,max(hravg_)*(1-(no+0)/(NO+1)),sprintf(' bc%d: %0.3f',no_flag,tr_avg_pval_(no)));
end;%for no=1:NO;
xlim([-0.5,1.0]); xlabel('avg-row-score: avg-score'); ylabel('#'); title('histogram of label-shuffled avg-score for avg-row-score: biclusters shown in red, pvalues listed on left. ');
hold off;
subplot(2,1,2);
hold on;
hist(tc_avg_,linspace(0,1,128));
for no=1:NO;
no_flag = O_ra(no)-1;
l = line([tc_base_avg_ra(no),tc_base_avg_ra(no)],[0,max(hcavg_)]); set(l,'Color','r','LineWidth',2);
text(-0.5,max(hcavg_)*(1-(no+0)/(NO+1)),sprintf(' bc%d: %0.3f',no_flag,tc_avg_pval_(no)));
end;%for no=1:NO;
xlim([-0.5,1.0]); xlabel('avg-col-score: avg-score'); ylabel('#'); title('histogram of label-shuffled avg-score for avg-col-score: biclusters shown in red, pvalues listed on left. ');
hold off;
set(gcf,'Position',[100, 100, 1049, 895]);
print('-depsc',sprintf('%s%s_%s_collate_FIGD.eps',path_FIGS,prefix_base,frwd_vs_back));
print('-djpeg',sprintf('%s%s_%s_collate_FIGD.jpg',path_FIGS,prefix_base,frwd_vs_back));
end;%if plot_flag;

% Now we calculate the p-value for each bicluster. ;
for no=1:NO;
no_flag = O_ra(no)-1;
tau_tmp = min([tr_max_pval_(no),tr_zmx_pval_(no),tr_avg_pval_(no)]);
tau_tmp = max(0.5/length(nc_ra_),tau_tmp);
ls_rm = find(tr_max_(:)>=prctile(tr_max_(:),100*(1-tau_tmp)));
ls_rz = find(tr_zmx_(:)>=prctile(tr_zmx_(:),100*(1-tau_tmp)));
ls_ra = find(tr_avg_(:)>=prctile(tr_avg_(:),100*(1-tau_tmp)));
%ls_cm = find(tc_max_(:)>=prctile(tc_max_(:),100*(1-tau_tmp)));
%ls_cz = find(tc_zmx_(:)>=prctile(tc_zmx_(:),100*(1-tau_tmp)));
%ls_ca = find(tc_avg_(:)>=prctile(tc_avg_(:),100*(1-tau_tmp)));
p_tmp = length(unionall({ls_rm,ls_rz,ls_ra}))/length(nc_ra_);
tr_cmb_pval_(no) = p_tmp;
disp(sprintf(' bc%d: combined pval %0.3f',no_flag,tr_cmb_pval_(no)));
end;%for no=1:NO;

% Here we plot the distributions of the max and avg in 2d ; 
plot_flag=1;
if plot_flag;
trclr_ = 'b.';
%tcclr_ = 'r.';
% Here we look at the distribution (across permutations) of the z-score max (across iterations) row score, conditioned on retaining all covariates ;
figure;
prows = 2; pcols = 1;
prm_pre = 'prm';
subplot(prows,pcols,1);
hold on;
h = plot(tr_avg_,tr_max_,trclr_); set(h,'MarkerSize',5);
%h = plot(tc_avg_,tc_max_,tcclr_); set(h,'MarkerSize',5);
for no=1:NO;
no_flag = O_ra(no)-1;
h = plot(tr_base_avg_ra(no),tr_base_max_ra(no),'co'); set(h,'MarkerSize',35);
h = plot(tr_base_avg_ra(no),tr_base_max_ra(no),'cx'); set(h,'MarkerSize',35);
%h = plot(tc_base_avg_ra(no),tc_base_max_ra(no),'mo'); set(h,'MarkerSize',35);
%h = plot(tc_base_avg_ra(no),tc_base_max_ra(no),'mx'); set(h,'MarkerSize',35);
end;%for no=1:NO;
XL = xlim();
YL = ylim();
for no=1:NO;
no_flag = O_ra(no)-1;
text(XL(1),YL(1) + (YL(2)-YL(1))*(1 - (no+0)/(2*NO+1)),sprintf(' bc%d: %0.3f',no_flag,tr_cmb_pval_(no)));
%text(XL(1) + (XL(2)-XL(1))*0.75,YL(1) + (YL(2)-YL(1))*(1 - (no+0)/(2*NO+1)),sprintf(' bc%d: %0.3f',no_flag,2*min(tc_max_pval_(no),tc_avg_pval_(no))));
end;%for no=1:NO;
hold off;
%xlabel('average row (blue) or col (red) score'); ylabel('max row (blue) or col (red) score'); title(sprintf('distribution of label-shuffled row (blue) and col (red) scores;\n biclusters in cyan (row) and magenta (col);\n p-values to left (row) and right (col);'));
xlabel('average row score'); ylabel('max row score'); title(sprintf('distribution of label-shuffled row scores;\n biclusters in cyan, p-values to left ;'));
subplot(prows,pcols,2);
hold on;
h = plot(tr_avg_,tr_zmx_,trclr_); set(h,'MarkerSize',5);
%h = plot(tc_avg_,tc_zmx_,tcclr_); set(h,'MarkerSize',5);
for no=1:NO;
no_flag = O_ra(no)-1;
h = plot(tr_base_avg_ra(no),tr_base_zmx_ra(no),'co'); set(h,'MarkerSize',35);
h = plot(tr_base_avg_ra(no),tr_base_zmx_ra(no),'cx'); set(h,'MarkerSize',35);
%h = plot(tc_base_avg_ra(no),tc_base_zmx_ra(no),'mo'); set(h,'MarkerSize',35);
%h = plot(tc_base_avg_ra(no),tc_base_zmx_ra(no),'mx'); set(h,'MarkerSize',35);
end;%for no=1:NO;
XL = xlim();
YL = ylim();
for no=1:NO;
no_flag = O_ra(no)-1;
text(XL(1),YL(1) + (YL(2)-YL(1))*(1 - (no+0)/(2*NO+1)),sprintf(' bc%d: %0.3f',no_flag,tr_cmb_pval_(no)));
%text(XL(1) + (XL(2)-XL(1))*0.75,YL(1) + (YL(2)-YL(1))*(1 - (no+0)/(2*NO+1)),sprintf(' bc%d: %0.3f',no_flag,2*min(tc_zmx_pval_(no),tc_avg_pval_(no))));
end;%for no=1:NO;
hold off;
%xlabel('average row (blue) or col (red) score'); ylabel('zmax row (blue) or col (red) score'); title(sprintf('distribution of label-shuffled row (blue) and col (red) scores;\n biclusters in cyan (row) and magenta (col);\n p-values to left (row) and right (col);'));
xlabel('average row score'); ylabel('zmax row score'); title(sprintf('distribution of label-shuffled row scores;\n biclusters in cyan, p-values to left;'));
set(gcf,'Position',[100, 100, 1049, 895]);
print('-depsc',sprintf('%s%s_%s_collate_FIGE.eps',path_FIGS,prefix_base,frwd_vs_back));
print('-djpeg',sprintf('%s%s_%s_collate_FIGE.jpg',path_FIGS,prefix_base,frwd_vs_back));
end;%if plot_flag;

path_FIGS = sprintf('%sdir_FIGS/',path_base); if ~exist(path_FIGS,'dir'); mkdir(path_base,'dir_FIGS'); end;
save(sprintf('%s%s_%s_collate.mat',path_FIGS,prefix_base,frwd_vs_back),'Omax','ox_ra','O_ra','NO','Pmax','ex_ra_','path_pre_prm','P_xxxx_ra_','NP_xxxx_','bc_size','tr_base_ra','tr_ra_','tc_base_ra','tc_ra_','nc_base_ra','nc_ra_','cij_base_ra','tr_avg_pval_','tr_zmx_pval_','tr_max_pval_','tr_avg_','tr_zmx_','tr_max_','tr_base_avg_ra','tr_base_zmx_ra','tr_base_max_ra','tr_cmb_pval_');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

